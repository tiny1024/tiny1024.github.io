<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[Cherish What You Have at the Moment]]></title>
  <subtitle><![CDATA[A journey of a thousand miles begins with a single step.]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.tiny1024.com//"/>
  <updated>2015-07-10T09:18:40.000Z</updated>
  <id>http://www.tiny1024.com//</id>
  
  <author>
    <name><![CDATA[tiny1024]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[对NSArray中自定义对象进行排序]]></title>
    <link href="http://www.tiny1024.com/2015/07/10/objc-sort-array/"/>
    <id>http://www.tiny1024.com/2015/07/10/objc-sort-array/</id>
    <published>2015-07-10T09:14:53.000Z</published>
    <updated>2015-07-10T09:18:40.000Z</updated>
    <content type="html"><![CDATA[<ol>
<li>使用NSComparator进行排序</li>
<li>使用NSSortDescriptor进行排序</li>
<li>使用selector进行排序<a id="more"></a> 
</li>
</ol>
<h2 id="准备">准备</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">Person</span> : <span class="title">NSObject</span></span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSString</span> *name;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSString</span> *nationality;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSDate</span> *birthday;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<h2 id="使用NSComparator进行排序">使用NSComparator进行排序</h2><p>Comparator使用block对象作比较操作：<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="built_in">NSComparisonResult</span> (^<span class="built_in">NSComparator</span>)(<span class="keyword">id</span> obj1, <span class="keyword">id</span> obj2);</span><br></pre></td></tr></table></figure></p>
<p>参数(obj1和obj2)就是我们将要做比较的对象。block返回的结果为NSComparisonResult类型来表示两个对象的顺序。</p>
<p>要对整个数组做排序，则需要使用NSArray的sortArrayUsingComparator:方法：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSArray</span> *sortedArray = [<span class="keyword">self</span><span class="variable">.persons</span> sortedArrayUsingComparator:^<span class="built_in">NSComparisonResult</span>(Person *obj1, Person *obj2) &#123;</span><br><span class="line">    <span class="keyword">return</span> [obj1<span class="variable">.name</span> compare:obj2<span class="variable">.name</span>];</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure>
<h2 id="使用NSSortDescriptor进行排序">使用NSSortDescriptor进行排序</h2><p>Sort Descriptor不仅可以用来对数组进行排序，还能指定item在Table View中的排序，以及Core Data中对Fetch Request返回的数据做排序处理。通过Sort Descriptor可以很方便的对数组进行多个key的排序。</p>
<p>下面来看看如何对我们的数组做name排序，然后在进行nationality排序：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSSortDescriptor</span> *first = [[<span class="built_in">NSSortDescriptor</span> alloc] initWithKey:<span class="string">@"name"</span> ascending:<span class="literal">YES</span>];</span><br><span class="line"><span class="built_in">NSSortDescriptor</span> *second = [[<span class="built_in">NSSortDescriptor</span> alloc] initWithKey:<span class="string">@"nationality"</span> ascending:<span class="literal">YES</span>];</span><br><span class="line"><span class="built_in">NSArray</span> *sortDescriptors = [<span class="built_in">NSArray</span> arrayWithObjects:first, second, <span class="literal">nil</span>];</span><br><span class="line"><span class="built_in">NSArray</span> *sortedArray = [<span class="keyword">self</span><span class="variable">.persons</span> sortedArrayUsingDescriptors:sortDescriptors];</span><br></pre></td></tr></table></figure>
<h2 id="使用selector进行排序">使用selector进行排序</h2><p>下面的方法需要定义在Person类中，用来对Person的生日进行排序：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">NSComparisonResult</span>)compare:(Person *)otherPerson &#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">self</span><span class="variable">.birthday</span> compare:otherPerson<span class="variable">.birthday</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSArray</span> *sortedArray = [<span class="keyword">self</span><span class="variable">.persons</span> sortedArrayUsingSelector:<span class="keyword">@selector</span>(compare:)];</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<ol>
<li>使用NSComparator进行排序</li>
<li>使用NSSortDescriptor进行排序</li>
<li>使用selector进行排序]]>
    
    </summary>
    
      <category term="Objective-C" scheme="http://www.tiny1024.com/tags/Objective-C/"/>
    
      <category term="iOS" scheme="http://www.tiny1024.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[C语言中的static]]></title>
    <link href="http://www.tiny1024.com/2015/07/10/c-static/"/>
    <id>http://www.tiny1024.com/2015/07/10/c-static/</id>
    <published>2015-07-10T09:05:38.000Z</published>
    <updated>2015-07-10T09:09:30.000Z</updated>
    <content type="html"><![CDATA[<h2 id="修饰变量">修饰变量</h2><p>变量又分为局部变量和全局变量，它们都存在内存的静态区。</p>
<h3 id="静态全局变量">静态全局变量</h3><p>作用域仅限于变量被定义的文件中，其他文件即使用extern声名也无法使用它。准确的说：作用域是从定义之处开始，到文件结尾处结束，在定义之处前面的那些代码也不能使用它。</p>
<h3 id="静态局部变量">静态局部变量</h3><p>在函数体里面定义的，就只能在这个函数里用了，同一个文档中的其它函数也用不了。由于被static修饰的变量总是在内存的静态区，所以即使这个函数运行结束，这个静态变量的值也不会被销毁，函数下次使用时仍然能用到这个值。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;stdio.h&gt;</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> j;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun1</span><span class="params">(<span class="keyword">void</span>)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">  i++;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"## i = %d\n"</span>, i); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun2</span><span class="params">(<span class="keyword">void</span>)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  j = <span class="number">0</span>;</span><br><span class="line">  j++;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"== j = %d\n"</span>, j); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(k = <span class="number">0</span>; k &lt; <span class="number">5</span>; k++)</span><br><span class="line">  &#123;</span><br><span class="line">    fun1();</span><br><span class="line">    fun2();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>程序运行结果为：<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">## i = 1</span><br><span class="line"><span class="header">== j = 1</span></span><br><span class="line">## i = 2</span><br><span class="line"><span class="header">== j = 1</span></span><br><span class="line">## i = 3</span><br><span class="line"><span class="header">== j = 1</span></span><br><span class="line">## i = 4</span><br><span class="line"><span class="header">== j = 1</span></span><br><span class="line">## i = 5</span><br><span class="line"><span class="header">== j = 1</span></span><br></pre></td></tr></table></figure></p>
<h2 id="修饰函数">修饰函数</h2><p>函数前加static使得函数成为静态函数。但此处static的含义不是指存储方式，而是指对函数的作用域仅局限于本文件（所以又称内部函数）。使用内部函数的好处是：不同的人编写不同的函数时，不用担心自己定义的函数是否会与其他文件中的函数同名。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="修饰变量">修饰变量</h2><p>变量又分为局部变量和全局变量，它们都存在内存的静态区。</p>
<h3 id="静态全局变量">静态全局变量</h3><p>作用域仅限于变量被定义的文件中，其他文件即使用extern声名也无法使用它。准确的说：作用域是从定义之处]]>
    </summary>
    
      <category term="C" scheme="http://www.tiny1024.com/tags/C/"/>
    
      <category term="C/C++" scheme="http://www.tiny1024.com/categories/C-C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Install VMware Tools on Ubuntu without X]]></title>
    <link href="http://www.tiny1024.com/2015/07/10/ubuntu-install-vmware-tools/"/>
    <id>http://www.tiny1024.com/2015/07/10/ubuntu-install-vmware-tools/</id>
    <published>2015-07-10T07:52:20.000Z</published>
    <updated>2015-07-10T08:04:50.000Z</updated>
    <content type="html"><![CDATA[<ol>
<li><p>Create a root shell<br><code>$ sudo -i</code></p>
</li>
<li><p>Update your sources<br><code># apt-get update</code></p>
</li>
<li><p>Upgrade your installed packages (dist-upgrade to force kernel upgrade)<br><code># apt-get dist-upgrade</code></p>
</li>
<li><p>Reboot<br><code># reboot</code></p>
</li>
<li><p>Create a root shell<br><code>$ sudo -i</code></p>
</li>
<li><p>Install packages VMware Tools needs<br><code># apt-get install linux-headers-server build-essential</code></p>
</li>
<li><p>Mount the VMware Tools CD ISO<br><code># mount /dev/cdrom /media/cdrom</code></p>
</li>
<li><p>Copy VMware Tools to home<br><code># cp /cdrom/*.tar.gz ~</code></p>
</li>
<li><p>Go home<br><code># cd ~</code></p>
</li>
<li><p>Untar/Gzip the install<br><code># tar -zxf *.tar.gz</code></p>
</li>
<li><p>Go into the resulting directory<br><code># cd vmware-tools-distrib</code></p>
</li>
<li><p>Start the installer<br><code># ./vmware-install.pl</code></p>
</li>
<li><p>Installer will ask you questions, the defaults should work fine</p>
</li>
<li><p>Reboot</p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<ol>
<li><p>Create a root shell<br><code>$ sudo -i</code></p>
</li>
<li><p>Update your sources<br><code># apt-get update</code></p>
</li>
<l]]>
    </summary>
    
      <category term="Ubuntu" scheme="http://www.tiny1024.com/tags/Ubuntu/"/>
    
      <category term="Linux/UNIX" scheme="http://www.tiny1024.com/categories/Linux-UNIX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[C语言中signed和unsigned导致的溢出]]></title>
    <link href="http://www.tiny1024.com/2015/07/10/c-signed-unsigned/"/>
    <id>http://www.tiny1024.com/2015/07/10/c-signed-unsigned/</id>
    <published>2015-07-10T07:45:20.000Z</published>
    <updated>2015-07-10T07:48:12.000Z</updated>
    <content type="html"><![CDATA[<h2 id="问题1">问题1</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;stdio.h&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">foo</span><span class="params">(<span class="keyword">void</span>)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> a = <span class="number">6</span>;</span><br><span class="line">  <span class="keyword">int</span> b = -<span class="number">20</span>;</span><br><span class="line">  (a + b &gt; <span class="number">6</span>) ? <span class="built_in">printf</span>(<span class="string">"&gt;6\n"</span>) : <span class="built_in">printf</span>(<span class="string">"&lt;=6\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  foo();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>结果：&gt;6<br>分析：a+b这里做了隐式的转换，把int转化为unsigned int。编译器就会把b当作一个很大的正数。</p>
<h2 id="问题2">问题2</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;stdio.h&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;string.h&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bar</span><span class="params">(<span class="keyword">void</span>)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">char</span> a[<span class="number">1000</span>];</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    a[i] = -<span class="number">1</span> - i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, (<span class="keyword">int</span>)<span class="built_in">strlen</span>(a));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  bar();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>结果：255<br>分析：在计算机中数值使用补码来进行表示。signed char类型表示值的范围是[-128, 127]。<br>当i=0时，a[0]=-1，补码为0xFF；<br>当i=1时，a[1]=-2，补码为0xFE；<br>……<br>当i=127时，a[127]=-128，补码为0x80，而-128是char类型所能表示的最小的负数。<br>当i=128时，a[128]=-129，但是这时候发生了溢出，-129需要9位才能保存下来，而char类型数据只有8位，所以最高位被丢弃。剩下的8位是原来9位补码的低8位的值，故补码的值为0x7F，(-129)=(1 1000 0001)原码=(1 0111 1111)补码；<br>……<br>当i=255时，a[255]=-256，补码为0x00，(-256)=(11 0000 0000)原码=(11 0000 0000)补码；<br>当i=256时，a[256]=-257，补码为0xFF;<br>……<br>按照上面的分析，a[0]到a[254]里面的值都不为0，而a[255]里的值为0。strlen函数是计算字符串长度的，并不包含字符串最后的’\0’。判断一个字符串是否结束的标志就是看是否遇到’\0’；如果遇到，则认为本字符串结束。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="问题1">问题1</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</spa]]>
    </summary>
    
      <category term="C" scheme="http://www.tiny1024.com/tags/C/"/>
    
      <category term="C/C++" scheme="http://www.tiny1024.com/categories/C-C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[C语言中的sizeof]]></title>
    <link href="http://www.tiny1024.com/2015/07/10/c-sizeof/"/>
    <id>http://www.tiny1024.com/2015/07/10/c-sizeof/</id>
    <published>2015-07-10T07:25:57.000Z</published>
    <updated>2015-07-10T07:40:45.000Z</updated>
    <content type="html"><![CDATA[<h2 id="sizeof是关键字而不是函数">sizeof是关键字而不是函数</h2><p>以下四个选项，那几个是正确的：<br><code>int i = 0;</code><br>(A) <code>sizeof(int)</code><br>(B) <code>sizeof(i)</code><br>(C) <code>sizeof int</code><br>(D) <code>sizeof ;</code></p>
<p>答案：在32位系统下(A)，(B)和(D)的值为4，(C)编译器会提示错误，因为int前面可以加unsigned、const等关键字，但是不能加sizeof。</p>
<h2 id="sizeof不同参数的值">sizeof不同参数的值</h2><table>
<thead>
<tr>
<th></th>
<th>32位系统结果</th>
<th>64位系统结果</th>
</tr>
</thead>
<tbody>
<tr>
<td>int *p = NULL;</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td>sizeof(p)</td>
<td>4</td>
<td>8</td>
</tr>
<tr>
<td>sizeof(*p)</td>
<td>4</td>
<td>4</td>
</tr>
<tr>
<td>int a[100];</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td>sizeof(a);</td>
<td>400</td>
<td>400</td>
</tr>
<tr>
<td>sizeof(a[100]);</td>
<td>4</td>
<td>4</td>
</tr>
<tr>
<td>sizeof(&amp;a);</td>
<td>4</td>
<td>8</td>
</tr>
<tr>
<td>sizeof(&amp;a[0]);</td>
<td>4</td>
<td>8</td>
</tr>
<tr>
<td>void fun(int b[100]) { sizeof(b); }</td>
<td>4</td>
<td>8</td>
</tr>
</tbody>
</table>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="sizeof是关键字而不是函数">sizeof是关键字而不是函数</h2><p>以下四个选项，那几个是正确的：<br><code>int i = 0;</code><br>(A) <code>sizeof(int)</code><br>(B) <code>size]]>
    </summary>
    
      <category term="C" scheme="http://www.tiny1024.com/tags/C/"/>
    
      <category term="C/C++" scheme="http://www.tiny1024.com/categories/C-C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://www.tiny1024.com/2015/07/09/hello-world/"/>
    <id>http://www.tiny1024.com/2015/07/09/hello-world/</id>
    <published>2015-07-09T06:25:29.000Z</published>
    <updated>2015-07-07T04:39:40.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[在Mac上配置Apache和php]]></title>
    <link href="http://www.tiny1024.com/2015/07/09/mac-apache-config/"/>
    <id>http://www.tiny1024.com/2015/07/09/mac-apache-config/</id>
    <published>2015-07-09T06:04:20.000Z</published>
    <updated>2015-07-10T07:33:26.000Z</updated>
    <content type="html"><![CDATA[<h2 id="启用php">启用php</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/apache2/httpd.conf</span><br></pre></td></tr></table></figure>
<p>取消下面一行的注释(去掉前边的#)：<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword"><span class="common">LoadModule</span></span> php5_module libexec/apache2/libphp5.so</span><br></pre></td></tr></table></figure></p>
<h2 id="启用每个用户的支持">启用每个用户的支持</h2><p>这步操作的目的是启用之后就可以使用<a href="http://localhost/~michael/" target="_blank" rel="external">http://localhost/~michael/</a> 来访问每个用户独立的网站。<br>这个的michael是我Mac的用户名。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mkdir ~/Sites/</span><br><span class="line">$ sudo vi /etc/apache2/users/michael.conf</span><br><span class="line">在michael.conf中添加如下的配置：</span><br><span class="line">&lt;Directory <span class="string">"/Users/michael/Sites/"</span>&gt;</span><br><span class="line">    Options Indexes MultiViews</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">修改文件的权限：</span><br><span class="line">$ sudo chmod <span class="number">775</span> /etc/apache2/users/michael.conf</span><br><span class="line">$ sudo vi /etc/apache2/httpd.conf</span><br><span class="line">取消以下几行的注释：</span><br><span class="line">LoadModule authz_core_module libexec/apache2/mod_authz_core.so</span><br><span class="line">LoadModule authz_host_module libexec/apache2/mod_authz_host.so</span><br><span class="line">LoadModule userdir_module libexec/apache2/mod_userdir.so</span><br><span class="line">Include /private/etc/apache2/extra/httpd-userdir.conf</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/apache2/extra/httpd-userdir.conf</span><br><span class="line">取消以下一行的注释：</span><br><span class="line">Include /private/etc/apache2/users/*.conf</span><br></pre></td></tr></table></figure>
<h2 id="创建php测试页">创建php测试页</h2><p>在~/Sites/下创建test.php，输入以下内容：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="preprocessor">&lt;?php</span></span><br><span class="line">phpinfo()</span><br><span class="line"><span class="preprocessor">?&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<h2 id="重新启动_apache">重新启动 apache</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apachectl restart</span><br></pre></td></tr></table></figure>
<p>打开<a href="http://localhost/~michael/test.php" target="_blank" rel="external">http://localhost/~michael/test.php</a><br>如果看到php相关的版本信息，就说明成功了！</p>
<p>如果没有看到php相关的版本信息，请做一下检查：</p>
<ol>
<li>检查Apache是否已经成功启动(可以查看是否有httpd进程: $ ps aux | grep httpd)</li>
<li>如果没有成功启动，检查配置文件</li>
<li>如果成功启动，检查Apache的端口是否是80</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="启用php">启用php</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td cla]]>
    </summary>
    
      <category term="Apache" scheme="http://www.tiny1024.com/tags/Apache/"/>
    
      <category term="Mac" scheme="http://www.tiny1024.com/tags/Mac/"/>
    
      <category term="Mac" scheme="http://www.tiny1024.com/categories/Mac/"/>
    
  </entry>
  
</feed>