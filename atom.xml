<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Tiny1024's Blog]]></title>
  <subtitle><![CDATA[A journey of a thousand miles begins with a single step.]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.tiny1024.com/"/>
  <updated>2015-09-18T10:24:48.000Z</updated>
  <id>http://www.tiny1024.com/</id>
  
  <author>
    <name><![CDATA[tiny1024]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Swift AnyGenerator]]></title>
    <link href="http://www.tiny1024.com/2015/09/18/swift-anygenerator/"/>
    <id>http://www.tiny1024.com/2015/09/18/swift-anygenerator/</id>
    <published>2015-09-18T09:08:34.000Z</published>
    <updated>2015-09-18T10:24:48.000Z</updated>
    <content type="html"><![CDATA[<p>In swift 2.0, the <code>GeneratorOf</code> has been changed to <code>AnyGenerator</code>.</p>
<a id="more"></a>
<h2 id="Ordered_Dictionary">Ordered Dictionary</h2><p>We will create a ordered dictionary with the following methods:</p>
<ul>
<li>insert</li>
<li>removeAtIndex</li>
<li>subscript[key]</li>
<li>subscript[index]</li>
</ul>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">OrderedDictionary</span>&lt;<span class="title">KeyType</span>: <span class="title">Hashable</span>, <span class="title">ValueType</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">typealias</span> <span class="type">ArrayType</span> = [<span class="type">KeyType</span>]</span><br><span class="line">    <span class="keyword">typealias</span> <span class="type">DictionaryType</span> = [<span class="type">KeyType</span>: <span class="type">ValueType</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> array = <span class="type">ArrayType</span>()</span><br><span class="line">    <span class="keyword">var</span> dictionary = <span class="type">DictionaryType</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">mutating</span> <span class="func"><span class="keyword">func</span> <span class="title">insert</span><span class="params">(value: ValueType, forKey key: KeyType, atIndex index: Int)</span></span> -&gt; <span class="type">ValueType</span>? &#123;</span><br><span class="line">        <span class="keyword">var</span> adjustedIndex = index</span><br><span class="line">        <span class="keyword">let</span> existingValue = <span class="keyword">self</span>.dictionary[key]</span><br><span class="line">        <span class="keyword">if</span> existingValue != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> existingIndex = <span class="keyword">self</span>.array.indexOf(key)!</span><br><span class="line">            <span class="keyword">if</span> existingIndex &lt; index &#123;</span><br><span class="line">                adjustedIndex--</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">self</span>.array.removeAtIndex(existingIndex)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">self</span>.array.insert(key, atIndex: adjustedIndex)</span><br><span class="line">        <span class="keyword">self</span>.dictionary[key] = value</span><br><span class="line">        <span class="keyword">return</span> existingValue</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">mutating</span> <span class="func"><span class="keyword">func</span> <span class="title">removeAtIndex</span><span class="params">(index: Int)</span></span> -&gt; (<span class="type">KeyType</span>, <span class="type">ValueType</span>) &#123;</span><br><span class="line">        precondition(index &lt; <span class="keyword">self</span>.array.<span class="built_in">count</span>, <span class="string">"Index out-of-bounds"</span>)</span><br><span class="line">        <span class="keyword">let</span> key = <span class="keyword">self</span>.array.removeAtIndex(index)</span><br><span class="line">        <span class="keyword">let</span> value = <span class="keyword">self</span>.dictionary.removeValueForKey(key)!</span><br><span class="line">        <span class="keyword">return</span> (key, value)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> <span class="built_in">count</span>: <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>.array.<span class="built_in">count</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">subscript</span>(key: <span class="type">KeyType</span>) -&gt; <span class="type">ValueType</span>? &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span>.dictionary[key]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">set</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> <span class="number">_</span> = <span class="keyword">self</span>.array.indexOf(key) &#123;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">self</span>.array.append(key);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">self</span>.dictionary[key] = newValue</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">subscript</span>(index: <span class="type">Int</span>) -&gt; (<span class="type">KeyType</span>, <span class="type">ValueType</span>) &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123;</span><br><span class="line">            precondition(index &lt; <span class="keyword">self</span>.array.<span class="built_in">count</span>, <span class="string">"Index out-of-bounds"</span>)</span><br><span class="line">            <span class="keyword">let</span> key = <span class="keyword">self</span>.array[index];</span><br><span class="line">            <span class="keyword">let</span> value = <span class="keyword">self</span>.dictionary[key]!</span><br><span class="line">            <span class="keyword">return</span> (key, value)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">set</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> (key, value) = newValue</span><br><span class="line">            <span class="keyword">self</span>.insert(value, forKey: key, atIndex: index)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Make_OrderedDictionary_conform_to_SequenceType">Make OrderedDictionary conform to SequenceType</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">OrderedDictionary</span>: <span class="title">SequenceType</span> </span>&#123;</span><br><span class="line">    <span class="keyword">typealias</span> <span class="type">GeneratorType</span> = <span class="type">AnyGenerator</span>&lt;(<span class="type">KeyType</span>, <span class="type">ValueType</span>)&gt;</span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">generate</span><span class="params">()</span></span> -&gt; <span class="type">AnyGenerator</span>&lt;(<span class="type">KeyType</span>, <span class="type">ValueType</span>)&gt; &#123;</span><br><span class="line">        <span class="keyword">var</span> index = <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> anyGenerator &#123;</span><br><span class="line">            <span class="keyword">if</span> index &lt; <span class="keyword">self</span>.array.<span class="built_in">count</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> key = <span class="keyword">self</span>.array[index++]</span><br><span class="line">                <span class="keyword">return</span> (key, <span class="keyword">self</span>.dictionary[key]!)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>In swift 2.0, the <code>GeneratorOf</code> has been changed to <code>AnyGenerator</code>.</p>]]>
    
    </summary>
    
      <category term="AnyGenerator" scheme="http://www.tiny1024.com/tags/AnyGenerator/"/>
    
      <category term="Swift" scheme="http://www.tiny1024.com/tags/Swift/"/>
    
      <category term="Swift" scheme="http://www.tiny1024.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Swift Assert and Precondition]]></title>
    <link href="http://www.tiny1024.com/2015/09/18/swift-assert-and-precondition/"/>
    <id>http://www.tiny1024.com/2015/09/18/swift-assert-and-precondition/</id>
    <published>2015-09-18T07:48:05.000Z</published>
    <updated>2015-09-18T10:16:54.000Z</updated>
    <content type="html"><![CDATA[<p>The difference between assert and precondition in swift.</p>
<a id="more"></a>
<h2 id="Difference">Difference</h2><p>Both assertions and preconditions are used when you want to check a condition to be true before continuing execution. If the condition fails then execution is halted and the app crashes.</p>
<p>The difference between the two is that assertions are compiled out in release builds, whereas preconditions are not. Assertions are designed to catch bugs during development, whereas preconditions are designed to throw fatal errors when a condition that must be true, is not.</p>
<p>An example use of an assertion would be where you have methods that set up your view hierarchy in a view controller. If one method relies on another being executed already, then you would assert that. Like so:</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">private <span class="func"><span class="keyword">func</span> <span class="title">configureTableView</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">self</span>.tableView = <span class="type">UITableView</span>(frame: <span class="type">CGRectZero</span>)</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">self</span>.view.addSubview(<span class="keyword">self</span>.tableView)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private <span class="func"><span class="keyword">func</span> <span class="title">configureHeader</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="built_in">assert</span>(<span class="keyword">self</span>.tableView != <span class="literal">nil</span>)</span><br><span class="line">    <span class="keyword">let</span> headerView = <span class="type">UIView</span>(frame: <span class="type">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">320</span>, <span class="number">50</span>))</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">self</span>.tableView.tableHeaderView = headerView</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this case, the configureHeader() method requires the table view to have been created, so an assertion that it exists is added before the header for the table view is set up. This would guard against calling these methods in the wrong order during view controller initialization.</p>
<p>This is something that you’re going to catch during development. Instead of cursing your computer wondering why the header isn’t showing up, you’ll be notified of the mistake by the debugger stopping at the assert. There would be no need for this check in release builds because you should catch it during development.</p>
<p>As stated above, preconditions do the same thing as assertions, but are also present in release builds. You might use them when you really do need to ensure that a condition is met. An example of this might be you are going to read into an array and you want to check that the index you’ve been given is valid. For example:</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">fetchPeopleBetweenIndexes</span><span class="params">(start: Int, end: Int)</span></span> -&gt; [<span class="type">Person</span>] &#123;</span><br><span class="line">    precondition(start &lt; end)</span><br><span class="line">    precondition(start &gt;= <span class="number">0</span>)</span><br><span class="line">    precondition(end &lt;= <span class="keyword">self</span>.people.<span class="built_in">count</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="type">Array</span>(<span class="keyword">self</span>.people[start..&lt;end])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, preconditions are used to check that the inputs to the function are valid. Start must be less than end, start must be greater than or equal to zero and end must be less than or equal to the number of people.</p>
<p>These sort of checks make sense to have in for debug and release because the app will crash anyway when the array is read from if the indexes are invalid. Crashing in your own code gives you more signal on what’s actually going wrong.</p>
<p>Both assertions and preconditions optionally take a string as its second parameter. This allows you to add a message which will be output when the failure occurs.</p>
<p>As a general rule of thumb, use assertions when execution could continue, but you want to be notified of the failure during development. Use preconditions when it’s a hard failure and continuing execution could cause data corruption or other serious problem. Preconditions are also great for when you’re developing code for others to use.</p>
<h2 id="Assert_Documentation">Assert Documentation</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public <span class="func"><span class="keyword">func</span> <span class="title">assert</span><span class="params">(</span><br><span class="line">    @autoclosure condition: <span class="params">()</span></span></span> -&gt; <span class="type">Bool</span>,</span><br><span class="line">    @autoclosure <span class="number">_</span> message: () -&gt; <span class="type">String</span> = <span class="keyword">default</span>,</span><br><span class="line">    file: <span class="type">StaticString</span> = <span class="keyword">default</span>,</span><br><span class="line">    line: <span class="type">UInt</span> = <span class="keyword">default</span>)</span><br></pre></td></tr></table></figure>
<blockquote><p>Traditional C-style assert with an optional message.</p>
<p>Use this function for internal sanity checks that are active during testing but do not impact performance of shipping code.</p>
<ul>
<li><p>In playgrounds and -Onone builds (the default for Xcode’s Debug configuration): if <code>condition</code> evaluates to false, stop program execution in a debuggable state after printing <code>message</code>.</p>
</li>
<li><p>In -O builds (the default for Xcode’s Release configuration), <code>condition</code> is not evaluated, and there are no effects.</p>
</li>
<li><p>In -Ounchecked builds, <code>condition</code> is not evaluated, but the optimizer may assume that it <em>would</em> evaluate to <code>true</code>. Failure to satisfy that assumption in -Ounchecked builds is a serious programming error.</p>
</li>
</ul>
</blockquote>
<h2 id="Precondition_Documentation">Precondition Documentation</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public <span class="func"><span class="keyword">func</span> <span class="title">precondition</span><span class="params">(</span><br><span class="line">    @autoclosure condition: <span class="params">()</span></span></span> -&gt; <span class="type">Bool</span>,</span><br><span class="line">    @autoclosure <span class="number">_</span> message: () -&gt; <span class="type">String</span> = <span class="keyword">default</span>,</span><br><span class="line">    file: <span class="type">StaticString</span> = <span class="keyword">default</span>,</span><br><span class="line">    line: <span class="type">UInt</span> = <span class="keyword">default</span>)</span><br></pre></td></tr></table></figure>
<blockquote><p>Check a necessary condition for making forward progress.</p>
<p>Use this function to detect conditions that must prevent the program from proceeding even in shipping code.</p>
<ul>
<li>In playgrounds and -Onone builds (the default for Xcode’s Debug configuration): if <code>condition</code> evaluates to false, stop program execution in a debuggable state after printing <code>message</code>.</li>
<li>In -O builds (the default for Xcode’s Release configuration): if <code>condition</code> evaluates to false, stop program execution.</li>
<li>In -Ounchecked builds, <code>condition</code> is not evaluated, but the optimizer may assume that it <em>would</em> evaluate to <code>true</code>. Failure to satisfy that assumption in -Ounchecked builds is a serious programming error.</li>
</ul>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>The difference between assert and precondition in swift.</p>]]>
    
    </summary>
    
      <category term="Assert" scheme="http://www.tiny1024.com/tags/Assert/"/>
    
      <category term="Precondition" scheme="http://www.tiny1024.com/tags/Precondition/"/>
    
      <category term="Swift" scheme="http://www.tiny1024.com/tags/Swift/"/>
    
      <category term="Swift" scheme="http://www.tiny1024.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS MailCore2 Gmail OAuth2]]></title>
    <link href="http://www.tiny1024.com/2015/09/17/ios-mailcore2-gmail-oauth2/"/>
    <id>http://www.tiny1024.com/2015/09/17/ios-mailcore2-gmail-oauth2/</id>
    <published>2015-09-17T08:28:39.000Z</published>
    <updated>2015-09-18T10:10:30.000Z</updated>
    <content type="html"><![CDATA[<p>本文简单介绍如何在iOS应用中使用mailcore2库，通过OAuth2认证连接Gmail邮箱。</p>
<a id="more"></a>
<h2 id="MailCore2介绍">MailCore2介绍</h2><p>Github: <a href="https://github.com/MailCore/mailcore2" target="_blank" rel="external">https://github.com/MailCore/mailcore2</a></p>
<p>MailCore2提供一种简单、异步的Objective-C API，用于IMAP，POP或者SMTP协议登录邮箱。<br>主要功能有：</p>
<ol>
<li>支持POP，IMAP和SMTP电子邮件协议；</li>
<li>RFC822解析和生成；</li>
<li>异步获取邮件的API；</li>
<li>可以使用HTML格式来显示邮件内容；</li>
<li>支持iOS和Mac</li>
</ol>
<p>MailCore2 已经加入到 CocoaPods中，使用pod安装mailcore2-ios非常容易：</p>
<p>创建Podfile，添加如下内容：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="rule"><span class="attribute">platform </span>:<span class="value">ios, <span class="string">'8.0'</span></span><br><span class="line">pod <span class="string">'mailcore2-ios'</span>, <span class="string">'~&gt; 0.5.1'</span></span></span></span><br></pre></td></tr></table></figure></p>
<p>然后执行<code>pod install</code>进行安装。</p>
<h2 id="MailCore2_IMAP_简单使用">MailCore2 IMAP 简单使用</h2><h3 id="创建MCOIMAPSession">创建MCOIMAPSession</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">getSession</span><span class="params">()</span></span> -&gt; <span class="type">MCOIMAPSession</span>? &#123;</span><br><span class="line">    <span class="comment">// Refer to OAuth2 section about how to get the token</span></span><br><span class="line">    <span class="keyword">let</span> authToken: <span class="type">String</span>? = <span class="literal">nil</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> session = <span class="type">MCOIMAPSession</span>()</span><br><span class="line">    session.hostname = <span class="string">"imap.gmail.com"</span></span><br><span class="line">    session.port = <span class="number">993</span></span><br><span class="line">    session.username = <span class="string">"xxx@gmail.com"</span></span><br><span class="line">    session.password = <span class="string">"xxx"</span></span><br><span class="line">    session.<span class="type">OAuth2Token</span> = authToken</span><br><span class="line">    session.connectionType = <span class="type">MCOConnectionType</span>.<span class="type">TLS</span></span><br><span class="line">    <span class="keyword">if</span> authToken == <span class="literal">nil</span> &#123;</span><br><span class="line">        session.authType = <span class="type">MCOAuthType</span>.<span class="type">SASLPlain</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        session.authType = <span class="type">MCOAuthType</span>.<span class="type">XOAuth2</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    session.connectionLogger = &#123; (connId, logType, rawData) <span class="keyword">in</span></span><br><span class="line">        <span class="keyword">let</span> data = <span class="type">NSString</span>(data: rawData, encoding: <span class="type">NSUTF8StringEncoding</span>)</span><br><span class="line">        <span class="built_in">println</span>(<span class="string">"connection id: <span class="subst">\(connId)</span>, log type: <span class="subst">\(logType)</span>, data: <span class="subst">\(data)</span>"</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> session</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="检查账户">检查账户</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">checkAccount</span><span class="params">()</span></span> -&gt; <span class="type">Void</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> session = getSession() &#123;</span><br><span class="line">        <span class="keyword">let</span> checkOperation = session.checkAccountOperation()</span><br><span class="line">        checkOperation.start &#123; (error) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">if</span> error == <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="comment">// Succeeded</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// Failed</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="获取文件夹信息">获取文件夹信息</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">checkFolder</span><span class="params">(folder: String)</span></span> -&gt; <span class="type">Void</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> session = getSession() &#123;</span><br><span class="line">        <span class="keyword">let</span> folderOperation = session.folderInfoOperation(folder)</span><br><span class="line">        folderOperation.start &#123; (error, folderInfo) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">if</span> error == <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="comment">// Succeeded</span></span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> folderInfo <span class="keyword">as</span>? <span class="type">MCOIMAPFolderInfo</span> &#123;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// Failed</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="获取邮件头列表">获取邮件头列表</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">fetchMailList</span><span class="params">(folder: String)</span></span> -&gt; <span class="type">Void</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> session = getSession() &#123;</span><br><span class="line">        <span class="keyword">let</span> requestKind = <span class="type">MCOIMAPMessagesRequestKind</span>.<span class="type">Headers</span></span><br><span class="line">        <span class="keyword">let</span> uids = <span class="type">MCOIndexSet</span>(range: <span class="type">MCORange</span>(location: <span class="number">1</span>, length: <span class="type">UINT64_MAX</span>))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> fetchOperation = session.fetchMessagesOperationWithFolder(folder, requestKind: requestKind, uids: uids)</span><br><span class="line"></span><br><span class="line">        fetchOperation.start &#123; (error, fetchedMessages, vanishedMessages) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">if</span> error == <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="comment">// Succeeded</span></span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> messages = fetchedMessages <span class="keyword">as</span>? [<span class="type">MCOIMAPMessage</span>] &#123;</span><br><span class="line">                    <span class="comment">// process messages</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// Failed</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="获取邮件详细信息">获取邮件详细信息</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Get the uid from MCOIMAPMessage:</span></span><br><span class="line"><span class="comment">// let message: MCOIMAPMessage = xxx</span></span><br><span class="line"><span class="comment">// let uid = message.uid</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">fetchMailByUid</span><span class="params">(uid: UInt32, folder: String)</span></span> -&gt; <span class="type">Void</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> session = getSession() &#123;</span><br><span class="line">        <span class="keyword">let</span> fetchOperation = session.fetchMessageOperationWithFolder(folder, uid: uid)</span><br><span class="line">        fetchOperation.start &#123; (error, data) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">if</span> error == <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="comment">// Succeeded</span></span><br><span class="line">                <span class="comment">// Render the mail to HTML</span></span><br><span class="line">                <span class="keyword">let</span> parser = <span class="type">MCOMessageParser</span>(data: data)</span><br><span class="line">                <span class="keyword">let</span> htmlBody = parser.htmlRenderingWithDelegate(<span class="literal">nil</span>)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// Failed</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="删除邮件">删除邮件</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">deleteMailByUid</span><span class="params">(uid: UInt64, folder: String)</span></span> -&gt; <span class="type">Void</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> session = getSession() &#123;</span><br><span class="line">        <span class="keyword">let</span> storeFlagOperation = session.storeFlagsOperationWithFolder(folder,</span><br><span class="line">            uids: <span class="type">MCOIndexSet</span>(index: uid),</span><br><span class="line">            kind: <span class="type">MCOIMAPStoreFlagsRequestKind</span>.<span class="type">Set</span>,</span><br><span class="line">            flags: <span class="type">MCOMessageFlag</span>.<span class="type">Deleted</span>)</span><br><span class="line"></span><br><span class="line">        storeFlagOperation.start &#123;</span><br><span class="line">            (error) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> deletedFlagStored = <span class="literal">false</span></span><br><span class="line">            <span class="keyword">if</span> error == <span class="literal">nil</span> &#123;</span><br><span class="line">                deletedFlagStored = <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> deletedFlagStored &#123;</span><br><span class="line">                <span class="keyword">let</span> deleteOp = session.expungeOperation(folder)</span><br><span class="line">                deleteOp.start&#123; (deleteError) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">                    <span class="comment">// Check the deletion error</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="其他操作">其他操作</h3><p>参见MailCore2参考文档：<a href="http://libmailcore.com/mailcore2/api/index.html" target="_blank" rel="external">http://libmailcore.com/mailcore2/api/index.html</a></p>
<h2 id="OAuth2介绍">OAuth2介绍</h2><p>OAuth 2.0 Mechanism:<br><a href="https://developers.google.com/gmail/xoauth2_protocol?hl=en" target="_blank" rel="external">https://developers.google.com/gmail/xoauth2_protocol?hl=en</a><br>Using OAuth 2.0 to Access Google APIs:<br><a href="https://developers.google.com/identity/protocols/OAuth2" target="_blank" rel="external">https://developers.google.com/identity/protocols/OAuth2</a><br>Using the OAuth 2 Controllers:<br><a href="https://github.com/google/gtm-oauth2/wiki" target="_blank" rel="external">https://github.com/google/gtm-oauth2/wiki</a></p>
<h2 id="OAuth2_Client_ID/Secret_申请">OAuth2 Client ID/Secret 申请</h2><ol>
<li>Login google developers console <a href="https://console.developers.google.com/" target="_blank" rel="external">https://console.developers.google.com/</a></li>
<li>Create a new project, such as NiftyProject.</li>
<li>Select “APIs &amp; auth” -&gt; “APIs”, add “Gmail API” to “Enabled APIs”</li>
<li>Select “APIs &amp; auth” -&gt; “Credentials” -&gt; “Add credentials” -&gt; “OAuth 2.0 client ID”.<br>Configure the consent screen if prompted, set the product name, such as NiftyDemo, then save the OAuth consent screen.<br>Then select “Add credentials” -&gt; “OAuth 2.0 client ID”, and set the Application type to “Other” (NOT iOS), click “Create” and input the Name(such as NiftyDemo) to finish.</li>
<li>Get the client ID and secret from the popup window.</li>
</ol>
<h2 id="集成OAuth2到iOS应用">集成OAuth2到iOS应用</h2><p>This section refers to <a href="https://github.com/google/gtm-oauth2/wiki" target="_blank" rel="external">https://github.com/google/gtm-oauth2/wiki</a></p>
<h3 id="Add_OAuth2_Related_Files">Add OAuth2 Related Files</h3><p>The project has targets for building a static library for iOS and a framework for Mac OS X. Alternatively, the source files and xibs may be dragged directly into your project file and compiled with your application.</p>
<p>The source files required are:</p>
<table>
<thead>
<tr>
<th>File</th>
<th>Repos Name</th>
</tr>
</thead>
<tbody>
<tr>
<td>GTMOAuth2Authentication.h/m</td>
<td>gtm-oauth2</td>
</tr>
<tr>
<td>GTMOAuth2SignIn.h/m</td>
<td>gtm-oauth2</td>
</tr>
<tr>
<td>GTMHTTPFetcher.h/m</td>
<td>gtm-http-fetcher</td>
</tr>
<tr>
<td>GTMSessionFetcher.h/m</td>
<td>gtm-session-fetcher</td>
</tr>
<tr>
<td>GTMOAuth2ViewControllerTouch.h/m</td>
<td>gtm-oauth2</td>
</tr>
<tr>
<td>GTMOAuth2ViewTouch.xib</td>
<td>gtm-oauth2</td>
</tr>
</tbody>
</table>
<p>The github repos:</p>
<table>
<thead>
<tr>
<th>Repos Name</th>
<th>Repos Link</th>
</tr>
</thead>
<tbody>
<tr>
<td>gtm-oauth2</td>
<td><a href="https://github.com/google/gtm-oauth2" target="_blank" rel="external">https://github.com/google/gtm-oauth2</a></td>
</tr>
<tr>
<td>gtm-http-fetcher</td>
<td><a href="https://github.com/google/gtm-http-fetcher" target="_blank" rel="external">https://github.com/google/gtm-http-fetcher</a></td>
</tr>
<tr>
<td>gtm-session-fetcher</td>
<td><a href="https://github.com/google/gtm-session-fetcher" target="_blank" rel="external">https://github.com/google/gtm-session-fetcher</a></td>
</tr>
</tbody>
</table>
<h3 id="ARC_Compatibility">ARC Compatibility</h3><p>When the controller source files are compiled directly into a project that has ARC enabled, then ARC must be disabled specifically for the controller source files.</p>
<p>To disable ARC for source files in Xcode 4, select the project and the target in Xcode. Under the target “Build Phases” tab, expand the Compile Sources build phase, select the library source files, then press Enter to open an edit field, and type -fno-objc-arc as the compiler flag for those files.</p>
<h3 id="System_Requirements">System Requirements</h3><p>The Mac controller is compatible with Mac OS X 10.5 and later. The iOS controller is compatible with iPhone OS 3 and later.</p>
<p>The sample applications use Objective-C blocks, so are intended for iOS 4 and Mac OS X 10.6.</p>
<h3 id="Integrate_with_iOS_App">Integrate with iOS App</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> scope = <span class="string">"https://mail.google.com/"</span></span><br><span class="line"><span class="keyword">let</span> keychainItemName = <span class="string">"My OAuth2: Gmail"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> clientID = <span class="string">"xxx"</span>        <span class="comment">// Get from above steps</span></span><br><span class="line"><span class="keyword">let</span> clientSecret = <span class="string">"xxx"</span>    <span class="comment">// Get from above steps</span></span><br><span class="line"></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">startOAuth2</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">let</span> viewController: <span class="type">GTMOAuth2ViewControllerTouch</span></span><br><span class="line">    viewController = <span class="type">GTMOAuth2ViewControllerTouch</span>(</span><br><span class="line">        scope: scope,</span><br><span class="line">        clientID: clientID,</span><br><span class="line">        clientSecret: clientSecret,</span><br><span class="line">        keychainItemName: keychainItemName,</span><br><span class="line">        delegate: <span class="keyword">self</span>,</span><br><span class="line">        finishedSelector: <span class="string">"viewController:finishedWithAuth:error:"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">self</span>.navigationController?.pushViewController(viewController, animated: <span class="literal">true</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Delegate method for OAuth2</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">viewController</span><span class="params">(viewController: GTMOAuth2ViewControllerTouch!, finishedWithAuth auth: GTMOAuth2Authentication!, error: NSError!)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> authError = error &#123;</span><br><span class="line">        <span class="comment">// Failed</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Succeeded</span></span><br><span class="line">        <span class="keyword">let</span> loginName = auth.userEmail</span><br><span class="line">        <span class="keyword">let</span> accessToken = auth.accessToken</span><br><span class="line">        <span class="comment">// Use the accessToken to get MCOIMAPSession</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Patch_for_GTMSessionFetcher-m">Patch for GTMSessionFetcher.m</h3><p>After upgrade Xcode from 6.4 to 7.0, there is a build issue for GTMSessionFetcher.m.<br>Please use the following patch:</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- (void)getCookiesForTask:(<span class="type">NSURLSessionTask</span> *)task</span><br><span class="line">-        completionHandler:(void (^)(<span class="type">NSArray</span> *))completionHandler &#123;</span><br><span class="line">+        completionHandler:(void (^)(<span class="type">NSArray</span>&lt;<span class="type">NSHTTPCookie</span> *&gt; *))completionHandler &#123;</span><br><span class="line">  <span class="keyword">if</span> (completionHandler) &#123;</span><br><span class="line">    <span class="type">NSURLRequest</span> *currentRequest = task.currentRequest;</span><br><span class="line">    <span class="type">NSArray</span> *cookies = [<span class="keyword">self</span> cookiesForURL:currentRequest.<span class="type">URL</span>];</span><br></pre></td></tr></table></figure>
<p>More info, please refer to <a href="https://github.com/google/google-api-objectivec-client/issues/93" target="_blank" rel="external">https://github.com/google/google-api-objectivec-client/issues/93</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>本文简单介绍如何在iOS应用中使用mailcore2库，通过OAuth2认证连接Gmail邮箱。</p>]]>
    
    </summary>
    
      <category term="Gmail" scheme="http://www.tiny1024.com/tags/Gmail/"/>
    
      <category term="MailCore2" scheme="http://www.tiny1024.com/tags/MailCore2/"/>
    
      <category term="OAuth2" scheme="http://www.tiny1024.com/tags/OAuth2/"/>
    
      <category term="iOS" scheme="http://www.tiny1024.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://www.tiny1024.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[In-App Purchase]]></title>
    <link href="http://www.tiny1024.com/2015/07/16/ios-in-app-purchase/"/>
    <id>http://www.tiny1024.com/2015/07/16/ios-in-app-purchase/</id>
    <published>2015-07-16T07:00:25.000Z</published>
    <updated>2015-09-17T08:22:54.000Z</updated>
    <content type="html"><![CDATA[<p>本文代码来源于《iOS开发进阶》第14章：使用应用内支付。</p>
<a id="more"></a>
<h2 id="需要添加的framework">需要添加的framework</h2><p><code>StoreKit.framework</code></p>
<h2 id="需要导入的库">需要导入的库</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">&lt;StoreKit/StoreKit.h&gt;</span></span></span><br></pre></td></tr></table></figure>
<h2 id="示例代码">示例代码</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">PayViewController</span> () &lt;<span class="title">SKProductsRequestDelegate</span>, <span class="title">SKPaymentTransactionObserver</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">PayViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewDidLoad</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    [[SKPaymentQueue defaultQueue] addTransactionObserver:<span class="keyword">self</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)doPay</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ([SKPaymentQueue canMakePayments]) &#123;</span><br><span class="line">        [<span class="keyword">self</span> getProductInfo];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"失败，用户禁止应用内付费购买"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)getProductInfo</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSSet</span> *set = [<span class="built_in">NSSet</span> setWithArray:@[ <span class="string">@"ProductId"</span> ]];</span><br><span class="line">    SKProductsRequest *request = [[SKProductsRequest alloc] initWithProductIdentifiers:set];</span><br><span class="line">    request<span class="variable">.delegate</span> = <span class="keyword">self</span>;</span><br><span class="line">    [request start];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)productsRequest:(SKProductsRequest *)request didReceiveResponse:(SKProductsResponse *)response</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSArray</span> *myProduct = response<span class="variable">.products</span>;</span><br><span class="line">    <span class="keyword">if</span> (myProduct<span class="variable">.count</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"无法获取产品信息，购买失败"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    SKPayment *payment = [SKPayment paymentWithProduct:myProduct[<span class="number">0</span>]];</span><br><span class="line">    [[SKPaymentQueue defaultQueue] addPayment:payment];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)paymentQueue:(SKPaymentQueue *)queue updatedTransactions:(<span class="built_in">NSArray</span> *)transactions</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (SKPaymentTransaction *transaction <span class="keyword">in</span> transactions) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (transaction<span class="variable">.transactionState</span>) &#123;</span><br><span class="line">            <span class="keyword">case</span> SKPaymentTransactionStatePurchased:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"transction identifier = %@"</span>, transaction<span class="variable">.transactionIdentifier</span>);</span><br><span class="line">                [<span class="keyword">self</span> completeTransaction:transaction];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> SKPaymentTransactionStateFailed:</span><br><span class="line">                [<span class="keyword">self</span> failedTransaction:transaction];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> SKPaymentTransactionStateRestored:</span><br><span class="line">                [<span class="keyword">self</span> restoreTransaction:transaction];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> SKPaymentTransactionStatePurchasing:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"商品添加进列表"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)completeTransaction:(SKPaymentTransaction *)transaction</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Your application should implement these two methods</span></span><br><span class="line">    <span class="built_in">NSString</span> *productIdentifier = transaction<span class="variable">.payment</span><span class="variable">.productIdentifier</span>;</span><br><span class="line">    <span class="keyword">if</span> ([productIdentifier length] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 向自己的服务器验证购买凭证</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Remove the transaction from the payment queue</span></span><br><span class="line">    [[SKPaymentQueue defaultQueue] finishTransaction:transaction];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)failedTransaction:(SKPaymentTransaction *)transaction</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (transaction<span class="variable">.error</span><span class="variable">.code</span> != SKErrorPaymentCancelled) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"购买失败"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"用户取消交易"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    [[SKPaymentQueue defaultQueue] finishTransaction:transaction];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)restoreTransaction:(SKPaymentTransaction *)transaction</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 对于已购商品，处理恢复购买的逻辑</span></span><br><span class="line">    [[SKPaymentQueue defaultQueue] finishTransaction:transaction];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>本文代码来源于《iOS开发进阶》第14章：使用应用内支付。</p>]]>
    
    </summary>
    
      <category term="In-App Purchase" scheme="http://www.tiny1024.com/tags/In-App-Purchase/"/>
    
      <category term="iOS" scheme="http://www.tiny1024.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[动态下载系统提供的多种中文字体]]></title>
    <link href="http://www.tiny1024.com/2015/07/16/ios-download-font/"/>
    <id>http://www.tiny1024.com/2015/07/16/ios-download-font/</id>
    <published>2015-07-16T06:57:11.000Z</published>
    <updated>2015-09-17T08:25:52.000Z</updated>
    <content type="html"><![CDATA[<p>本文代码来源于《iOS开发进阶》第13章：动态下载系统提供的多种中文字体。</p>
<a id="more"></a>
<h2 id="字体文件的存储位置">字体文件的存储位置</h2><p><code>/private/var/mobile/Library/Assets/com_apple_MobileAsset_Font/</code></p>
<h2 id="需要导入的库">需要导入的库</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">&lt;CoreText/CoreText.h&gt;</span></span></span><br></pre></td></tr></table></figure>
<h2 id="检查字体是否已经存在">检查字体是否已经存在</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>)isFontDownloaded:(<span class="built_in">NSString</span> *)fontName</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">UIFont</span> *aFont = [<span class="built_in">UIFont</span> fontWithName:fontName size:<span class="number">12.0</span>];</span><br><span class="line">    <span class="keyword">if</span> (aFont &amp;&amp; ([aFont<span class="variable">.fontName</span> compare:fontName] == <span class="built_in">NSOrderedSame</span></span><br><span class="line">                  || [aFont<span class="variable">.familyName</span> compare:fontName] == <span class="built_in">NSOrderedSame</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="下载字体">下载字体</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)downloadFont:(<span class="built_in">NSString</span> *)fontName</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Create a dictionary with the font's PostScript name</span></span><br><span class="line">    <span class="built_in">NSMutableDictionary</span> *attrs = [<span class="built_in">NSMutableDictionary</span> dictionaryWithObjectsAndKeys:fontName, kCTFontNameAttribute, <span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Create a new font descriptor reference from the attributes dictionary</span></span><br><span class="line">    CTFontDescriptorRef desc = CTFontDescriptorCreateWithAttributes((__bridge <span class="built_in">CFDictionaryRef</span>)attrs);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSMutableArray</span> *descs = [<span class="built_in">NSMutableArray</span> arrayWithCapacity:<span class="number">0</span>];</span><br><span class="line">    [descs addObject:(__bridge <span class="keyword">id</span>)desc];</span><br><span class="line">    <span class="built_in">CFRelease</span>(desc);</span><br><span class="line"></span><br><span class="line">    __block <span class="built_in">BOOL</span> errorDuringDownload = <span class="literal">NO</span>;</span><br><span class="line"></span><br><span class="line">    CTFontDescriptorMatchFontDescriptorsWithProgressHandler((__bridge <span class="built_in">CFArrayRef</span>)descs, <span class="literal">NULL</span>,</span><br><span class="line">    ^<span class="keyword">bool</span>(CTFontDescriptorMatchingState state, <span class="built_in">CFDictionaryRef</span> progressParameter) &#123;</span><br><span class="line">        <span class="keyword">double</span> progressValue = [[(__bridge <span class="built_in">NSDictionary</span> *)progressParameter</span><br><span class="line">                                 objectForKey:(<span class="keyword">id</span>)kCTFontDescriptorMatchingPercentage] doubleValue];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (state == kCTFontDescriptorMatchingDidBegin) &#123;</span><br><span class="line">            <span class="comment">// Show an activity indicator</span></span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"Begin Matching"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (state == kCTFontDescriptorMatchingDidFinish) &#123;</span><br><span class="line">            <span class="comment">// Hide the activity indicator</span></span><br><span class="line">            <span class="keyword">if</span> (!errorDuringDownload) &#123;</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"%@ Downloaded"</span>, fontName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (state == kCTFontDescriptorMatchingWillBeginDownloading) &#123;</span><br><span class="line">            <span class="comment">// Show a progress bar</span></span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"Beging Downloading"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (state == kCTFontDescriptorMatchingDidFinishDownloading) &#123;</span><br><span class="line">            <span class="comment">// Hide the progress bar</span></span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"Finish Downloading"</span>);</span><br><span class="line">            <span class="built_in">dispatch_async</span>(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">                <span class="comment">// Modify the Font on the UI</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (state == kCTFontDescriptorMatchingDownloading) &#123;</span><br><span class="line">            <span class="comment">// Use the progress bar to indicate the progress of the downloading</span></span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"Downloading %.0f%% complete"</span>, progressValue);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (state == kCTFontDescriptorMatchingDidFailWithError) &#123;</span><br><span class="line">            <span class="built_in">NSError</span> *error = [(__bridge <span class="built_in">NSDictionary</span> *)progressParameter</span><br><span class="line">                              objectForKey:(<span class="keyword">id</span>)kCTFontDescriptorMatchingError];</span><br><span class="line">            <span class="keyword">if</span> (error != <span class="literal">nil</span>) &#123;</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"Error Message: %@"</span>, [error description]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"Error Message is not available"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Set our flag</span></span><br><span class="line">            errorDuringDownload = <span class="literal">YES</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">BOOL</span>)<span class="literal">YES</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>本文代码来源于《iOS开发进阶》第13章：动态下载系统提供的多种中文字体。</p>]]>
    
    </summary>
    
      <category term="动态下载字体" scheme="http://www.tiny1024.com/tags/%E5%8A%A8%E6%80%81%E4%B8%8B%E8%BD%BD%E5%AD%97%E4%BD%93/"/>
    
      <category term="iOS" scheme="http://www.tiny1024.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[密码输入窗口]]></title>
    <link href="http://www.tiny1024.com/2015/07/16/ios-password-window/"/>
    <id>http://www.tiny1024.com/2015/07/16/ios-password-window/</id>
    <published>2015-07-16T06:51:06.000Z</published>
    <updated>2015-09-17T08:21:31.000Z</updated>
    <content type="html"><![CDATA[<p>简单的iOS程序密码保护功能，在用户从应用的任何界面按Home键退出，过一段时间再从后台切换回来时，显示一个密码输入界面。</p>
<a id="more"></a>
<p>本文代码来源于《iOS开发进阶》第12章：使用UIWindow。</p>
<p>本例子需要添加文件PasswordInputWindow.h和PasswordInputWindow.m，修改AppDelegate.h。</p>
<h2 id="PasswordInputWindow-h">PasswordInputWindow.h</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">PasswordInputWindow</span> : <span class="title">UIWindow</span></span></span><br><span class="line"></span><br><span class="line">+ (PasswordInputWindow *)sharedInstance;</span><br><span class="line">- (<span class="keyword">void</span>)show;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<h2 id="PasswordInputWindow-m">PasswordInputWindow.m</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">"PasswordInputWindow.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">PasswordInputWindow</span> () </span>&#123;</span><br><span class="line">    <span class="built_in">UITextField</span> * _textField;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">PasswordInputWindow</span></span></span><br><span class="line"></span><br><span class="line">+ (PasswordInputWindow *)sharedInstance</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">id</span> sharedInstance = <span class="literal">nil</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">dispatch_once_t</span> onceToken;</span><br><span class="line">    <span class="built_in">dispatch_once</span>(&amp;onceToken, ^&#123;</span><br><span class="line">        sharedInstance = [[<span class="keyword">self</span> alloc] initWithFrame:[[<span class="built_in">UIScreen</span> mainScreen] bounds]];</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> sharedInstance;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (instancetype)initWithFrame:(<span class="built_in">CGRect</span>)frame</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">self</span> = [<span class="keyword">super</span> initWithFrame:frame];</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>) &#123;</span><br><span class="line">        <span class="built_in">UILabel</span> *label = [[<span class="built_in">UILabel</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">10</span>, <span class="number">50</span>, <span class="number">200</span>, <span class="number">20</span>)];</span><br><span class="line">        label<span class="variable">.text</span> = <span class="string">@"Please input password"</span>;</span><br><span class="line">        [<span class="keyword">self</span> addSubview:label];</span><br><span class="line"></span><br><span class="line">        <span class="built_in">UITextField</span> *textField = [[<span class="built_in">UITextField</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">10</span>, <span class="number">80</span>, <span class="number">200</span>, <span class="number">20</span>)];</span><br><span class="line">        textField<span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">        textField<span class="variable">.secureTextEntry</span> = <span class="literal">YES</span>;</span><br><span class="line">        [<span class="keyword">self</span> addSubview:textField];</span><br><span class="line"></span><br><span class="line">        <span class="built_in">UIButton</span> *button = [[<span class="built_in">UIButton</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">10</span>, <span class="number">110</span>, <span class="number">200</span>, <span class="number">44</span>)];</span><br><span class="line">        [button setBackgroundColor:[<span class="built_in">UIColor</span> blueColor]];</span><br><span class="line">        button<span class="variable">.titleLabel</span><span class="variable">.textColor</span> = [<span class="built_in">UIColor</span> blackColor];</span><br><span class="line">        [button setTitle:<span class="string">@"OK"</span> forState:<span class="built_in">UIControlStateNormal</span>];</span><br><span class="line">        [button addTarget:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(completeButtonPressed:)</span><br><span class="line">                     forControlEvents:<span class="built_in">UIControlEventTouchUpInside</span>];</span><br><span class="line">        [<span class="keyword">self</span> addSubview:button];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span><span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> yellowColor];</span><br><span class="line">        _textField = textField;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)show</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="keyword">self</span> makeKeyAndVisible];</span><br><span class="line">    <span class="keyword">self</span><span class="variable">.hidden</span> = <span class="literal">NO</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)completeButtonPressed:(<span class="keyword">id</span>)sender</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ([_textField<span class="variable">.text</span> isEqualToString:<span class="string">@"abcd"</span>]) &#123;</span><br><span class="line">        _textField<span class="variable">.text</span> = <span class="literal">nil</span>;</span><br><span class="line">        [_textField resignFirstResponder];</span><br><span class="line">        [<span class="keyword">self</span> resignKeyWindow];</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.hidden</span> = <span class="literal">YES</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        [<span class="keyword">self</span> showErrorAlertView];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)showErrorAlertView</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">UIAlertView</span> *alertView = [[<span class="built_in">UIAlertView</span> alloc] initWithTitle:<span class="literal">nil</span></span><br><span class="line">                                                        message:<span class="string">@"Incorrect password"</span></span><br><span class="line">                                                       delegate:<span class="literal">nil</span></span><br><span class="line">                                              cancelButtonTitle:<span class="string">@"OK"</span></span><br><span class="line">                                              otherButtonTitles:<span class="literal">nil</span>];</span><br><span class="line">    [alertView show];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<h2 id="修改AppDelegate-h">修改AppDelegate.h</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)applicationDidEnterBackground:(<span class="built_in">UIApplication</span> *)application</span><br><span class="line">&#123;</span><br><span class="line">    [[PasswordInputWindow sharedInstance] show];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>简单的iOS程序密码保护功能，在用户从应用的任何界面按Home键退出，过一段时间再从后台切换回来时，显示一个密码输入界面。</p>]]>
    
    </summary>
    
      <category term="Password Window" scheme="http://www.tiny1024.com/tags/Password-Window/"/>
    
      <category term="iOS" scheme="http://www.tiny1024.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://www.tiny1024.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS简单的plist文件读写操作]]></title>
    <link href="http://www.tiny1024.com/2015/07/12/ios-plist/"/>
    <id>http://www.tiny1024.com/2015/07/12/ios-plist/</id>
    <published>2015-07-12T03:44:55.000Z</published>
    <updated>2015-09-17T08:06:13.000Z</updated>
    <content type="html"><![CDATA[<p>本文简单介绍plist和基本操作。</p>
<a id="more"></a>
<h2 id="plist简单介绍">plist简单介绍</h2><p>全名是Property List，属性列表文件，是一种用来存储序列化后的对象的文件。<br>文件扩展名为.plist，因此通常被称为plist文件。文件是XML格式的。<br>plist文件通常用于储存用户设置，也可以用于存储Bundle和Application的信息。</p>
<h2 id="文件保存的位置和读写操作">文件保存的位置和读写操作</h2><h3 id="工程沙盒里">工程沙盒里</h3><p>说明：Document文件夹下，以文件方式读取和写入</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSArray</span> *items = [<span class="built_in">NSArray</span> arrayWithObjects:<span class="string">@"one"</span>, <span class="string">@"two"</span>, <span class="string">@"three"</span>, <span class="string">@"four"</span>, <span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成文件存储路径为沙盒下的items.plist</span></span><br><span class="line"><span class="built_in">NSString</span> *dir = [<span class="built_in">NSSearchPathForDirectoriesInDomains</span>(<span class="built_in">NSDocumentDirectory</span>, <span class="built_in">NSUserDomainMask</span>, <span class="literal">YES</span>) objectAtIndex:<span class="number">0</span>];</span><br><span class="line"><span class="built_in">NSString</span> *path = [dir stringByAppendingPathComponent:<span class="string">@"items.plist"</span>];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"%@"</span>, path);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取</span></span><br><span class="line"><span class="built_in">NSMutableArray</span> *existingItems = [<span class="built_in">NSMutableArray</span> arrayWithContentsOfFile:path];</span><br><span class="line"><span class="keyword">if</span> (!existingItems)</span><br><span class="line">    existingItems = [[<span class="built_in">NSMutableArray</span> alloc] init];</span><br><span class="line">[existingItems addObjectsFromArray:items];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 写入</span></span><br><span class="line">[existingItems writeToFile:path atomically:<span class="literal">YES</span>];</span><br></pre></td></tr></table></figure>
<p>plist文件在模拟器中的存储路径：<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/Users/xxx/Library/Developer/CoreSimulator/Devices</span><br><span class="line">  /<span class="number">974</span>ED177-<span class="number">2</span>CE1-<span class="number">42</span>AB-A8D1-<span class="number">0</span>C5FD69ACC18/data/Containers/Data/Application</span><br><span class="line">  /DD92537F-<span class="number">7</span>AD5-<span class="number">4</span>F7C-<span class="number">9</span>BD6-<span class="number">2</span>DE1C9527F0F/Documents/items<span class="variable">.plist</span></span><br></pre></td></tr></table></figure></p>
<h3 id="工程自身里">工程自身里</h3><p>说明：在工程里手动创建plist文件，并写入文件内容，在代码中读取plist</p>
<p>工程下的plist是我们不能在代码中写入的，只可以读取。<br>需要先在工程中手动创建provinces.plist文件，然后使用下边的代码读取。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span> *path = [[<span class="built_in">NSBundle</span> mainBundle] pathForResource:<span class="string">@"provinces"</span> ofType:<span class="string">@"plist"</span>];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"%@"</span>, path);</span><br><span class="line"><span class="built_in">NSDictionary</span> *dict = [<span class="built_in">NSDictionary</span> dictionaryWithContentsOfFile:path];</span><br></pre></td></tr></table></figure>
<p>plist文件在模拟器中的存储路径：<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/Users/xxx/Library/Developer/CoreSimulator/Devices</span><br><span class="line">  /<span class="number">974</span>ED177-<span class="number">2</span>CE1-<span class="number">42</span>AB-A8D1-<span class="number">0</span>C5FD69ACC18/data/Containers/Bundle/Application</span><br><span class="line">  /DD92537F-<span class="number">7</span>AD5-<span class="number">4</span>F7C-<span class="number">9</span>BD6-<span class="number">2</span>DE1C9527F0F/TestPList<span class="variable">.app</span>/provinces<span class="variable">.plist</span></span><br></pre></td></tr></table></figure></p>
<h3 id="工程沙盒里-1">工程沙盒里</h3><p>说明：使用NSUserDefaults读取和写入</p>
<p>通常来说我们会使用NSUserDefaults来读取和写入少量配置信息。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSUserDefaults</span> *defaults = [<span class="built_in">NSUserDefaults</span> standardUserDefaults];</span><br><span class="line"><span class="built_in">NSMutableDictionary</span> *userInfo = [defaults objectForKey:<span class="string">@"UserInfo"</span>];</span><br><span class="line"><span class="built_in">NSString</span> *name = [userInfo objectForKey:<span class="string">@"Name"</span>];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"name: %@"</span>, name);</span><br><span class="line"></span><br><span class="line">[userInfo setObject:<span class="string">@"Beijing"</span> forKey:<span class="string">@"City"</span>];</span><br><span class="line">[defaults setObject:userInfo forKey:<span class="string">@"UserInfo"</span>];</span><br><span class="line"></span><br><span class="line">[defaults setObject:<span class="string">@"my session id"</span> forKey:<span class="string">@"SessionInfo"</span>];</span><br><span class="line">[defaults removeObjectForKey:<span class="string">@"OldKey"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 同步</span></span><br><span class="line">[defaults synchronize];</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>本文简单介绍plist和基本操作。</p>]]>
    
    </summary>
    
      <category term="iOS" scheme="http://www.tiny1024.com/tags/iOS/"/>
    
      <category term="plist" scheme="http://www.tiny1024.com/tags/plist/"/>
    
      <category term="iOS" scheme="http://www.tiny1024.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[对NSArray中自定义对象进行排序]]></title>
    <link href="http://www.tiny1024.com/2015/07/10/objc-sort-array/"/>
    <id>http://www.tiny1024.com/2015/07/10/objc-sort-array/</id>
    <published>2015-07-10T09:14:53.000Z</published>
    <updated>2015-09-17T07:48:39.000Z</updated>
    <content type="html"><![CDATA[<p>本文介绍如何在Objective-C中使用NSComparator, NSSortDescriptor和selector进行排序。</p>
<a id="more"></a>
<h2 id="准备">准备</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">Person</span> : <span class="title">NSObject</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSString</span> *name;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSString</span> *nationality;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSDate</span> *birthday;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<h2 id="使用NSComparator进行排序">使用NSComparator进行排序</h2><p>NSComparator使用block对象作比较操作：<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="built_in">NSComparisonResult</span> (^<span class="built_in">NSComparator</span>)(<span class="keyword">id</span> obj1, <span class="keyword">id</span> obj2);</span><br></pre></td></tr></table></figure></p>
<p>参数(obj1和obj2)就是我们将要做比较的对象。block返回的结果为NSComparisonResult类型来表示两个对象的顺序。</p>
<p>NSComparisonResult的定义如下：<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">   <span class="built_in">NSOrderedAscending</span> = -<span class="number">1</span>,</span><br><span class="line">   <span class="built_in">NSOrderedSame</span>,</span><br><span class="line">   <span class="built_in">NSOrderedDescending</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">NSInteger</span> <span class="built_in">NSComparisonResult</span>;</span><br></pre></td></tr></table></figure></p>
<p>要对整个数组做排序，则需要使用NSArray的sortArrayUsingComparator:方法：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSArray</span> *sortedArray = [<span class="keyword">self</span><span class="variable">.persons</span> sortedArrayUsingComparator:^<span class="built_in">NSComparisonResult</span>(Person *obj1, Person *obj2) &#123;</span><br><span class="line">    <span class="keyword">return</span> [obj1<span class="variable">.name</span> compare:obj2<span class="variable">.name</span>];</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure>
<h2 id="使用NSSortDescriptor进行排序">使用NSSortDescriptor进行排序</h2><p>NSSortDescriptor不仅可以用来对数组进行排序，还能指定item在Table View中的排序，以及Core Data中对Fetch Request返回的数据做排序处理。通过Sort Descriptor可以很方便的对数组进行多个key的排序。</p>
<p>下面来看看如何对我们的数组做name排序，然后在进行nationality排序：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSSortDescriptor</span> *first = [[<span class="built_in">NSSortDescriptor</span> alloc] initWithKey:<span class="string">@"name"</span> ascending:<span class="literal">YES</span>];</span><br><span class="line"><span class="built_in">NSSortDescriptor</span> *second = [[<span class="built_in">NSSortDescriptor</span> alloc] initWithKey:<span class="string">@"nationality"</span> ascending:<span class="literal">YES</span>];</span><br><span class="line"><span class="built_in">NSArray</span> *sortDescriptors = [<span class="built_in">NSArray</span> arrayWithObjects:first, second, <span class="literal">nil</span>];</span><br><span class="line"><span class="built_in">NSArray</span> *sortedArray = [<span class="keyword">self</span><span class="variable">.persons</span> sortedArrayUsingDescriptors:sortDescriptors];</span><br></pre></td></tr></table></figure>
<h2 id="使用selector进行排序">使用selector进行排序</h2><p>下面的方法需要定义在Person类中，用来对Person的生日进行排序：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">NSComparisonResult</span>)compare:(Person *)otherPerson &#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">self</span><span class="variable">.birthday</span> compare:otherPerson<span class="variable">.birthday</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>要对数组用selector做排序，需要使用NSArray的sortedArrayUsingSelector:方法：<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSArray</span> *sortedArray = [<span class="keyword">self</span><span class="variable">.persons</span> sortedArrayUsingSelector:<span class="keyword">@selector</span>(compare:)];</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>本文介绍如何在Objective-C中使用NSComparator, NSSortDescriptor和selector进行排序。</p>]]>
    
    </summary>
    
      <category term="Objective-C" scheme="http://www.tiny1024.com/tags/Objective-C/"/>
    
      <category term="iOS" scheme="http://www.tiny1024.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[C语言中的static]]></title>
    <link href="http://www.tiny1024.com/2015/07/10/c-static/"/>
    <id>http://www.tiny1024.com/2015/07/10/c-static/</id>
    <published>2015-07-10T09:05:38.000Z</published>
    <updated>2015-09-17T07:39:27.000Z</updated>
    <content type="html"><![CDATA[<p>本文介绍C语言中的<code>static</code>关键字，包括修饰变量和函数，其中修饰变量包括静态全局变量和静态局部变量。</p>
<a id="more"></a>
<h2 id="修饰变量">修饰变量</h2><p>变量又分为局部变量和全局变量，它们都存在内存的静态区。</p>
<h3 id="静态全局变量">静态全局变量</h3><p>作用域仅限于变量被定义的文件中，其他文件即使用extern声名也无法使用它。准确的说：作用域是从定义之处开始，到文件结尾处结束，在定义之处前面的那些代码也不能使用它。</p>
<h3 id="静态局部变量">静态局部变量</h3><p>在函数体里面定义的，就只能在这个函数里用了，同一个文档中的其它函数也用不了。由于被static修饰的变量总是在内存的静态区，所以即使这个函数运行结束，这个静态变量的值也不会被销毁，函数下次使用时仍然能用到这个值。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> j;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun1</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">  i++;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"## i = %d\n"</span>, i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun2</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  j = <span class="number">0</span>;</span><br><span class="line">  j++;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"== j = %d\n"</span>, j);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(k = <span class="number">0</span>; k &lt; <span class="number">5</span>; k++) &#123;</span><br><span class="line">    fun1();</span><br><span class="line">    fun2();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>程序运行结果为：<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">## i = 1</span><br><span class="line"><span class="header">== j = 1</span></span><br><span class="line">## i = 2</span><br><span class="line"><span class="header">== j = 1</span></span><br><span class="line">## i = 3</span><br><span class="line"><span class="header">== j = 1</span></span><br><span class="line">## i = 4</span><br><span class="line"><span class="header">== j = 1</span></span><br><span class="line">## i = 5</span><br><span class="line"><span class="header">== j = 1</span></span><br></pre></td></tr></table></figure></p>
<h2 id="修饰函数">修饰函数</h2><p>函数前加static使得函数成为静态函数。<br>但此处static的含义不是指存储方式，而是指对函数的作用域仅局限于本文件（所以又称内部函数）。<br>使用内部函数的好处是：不同的人编写不同的函数时，不用担心自己定义的函数是否会与其他文件中的函数同名。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>本文介绍C语言中的<code>static</code>关键字，包括修饰变量和函数，其中修饰变量包括静态全局变量和静态局部变量。</p>]]>
    
    </summary>
    
      <category term="C" scheme="http://www.tiny1024.com/tags/C/"/>
    
      <category term="C/C++" scheme="http://www.tiny1024.com/categories/C-C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Install VMware Tools on Ubuntu without X]]></title>
    <link href="http://www.tiny1024.com/2015/07/10/ubuntu-install-vmware-tools/"/>
    <id>http://www.tiny1024.com/2015/07/10/ubuntu-install-vmware-tools/</id>
    <published>2015-07-10T07:52:20.000Z</published>
    <updated>2015-09-17T07:22:51.000Z</updated>
    <content type="html"><![CDATA[<p>This note shows a brief operation steps about how to install VMware tools on Ubuntu with commands.</p>
<a id="more"></a>
<ol>
<li><p>Create a root shell<br><code>$ sudo -i</code></p>
</li>
<li><p>Update your sources<br><code># apt-get update</code></p>
</li>
<li><p>Upgrade your installed packages (dist-upgrade to force kernel upgrade)<br><code># apt-get dist-upgrade</code></p>
</li>
<li><p>Reboot<br><code># reboot</code></p>
</li>
<li><p>Create a root shell<br><code>$ sudo -i</code></p>
</li>
<li><p>Install packages VMware Tools needs<br><code># apt-get install linux-headers-server build-essential</code></p>
</li>
<li><p>Mount the VMware Tools CD ISO<br><code># mount /dev/cdrom /media/cdrom</code></p>
</li>
<li><p>Copy VMware Tools to home<br><code># cp /cdrom/*.tar.gz ~</code></p>
</li>
<li><p>Go home<br><code># cd ~</code></p>
</li>
<li><p>Untar/Gzip the install<br><code># tar -zxf *.tar.gz</code></p>
</li>
<li><p>Go into the resulting directory<br><code># cd vmware-tools-distrib</code></p>
</li>
<li><p>Start the installer<br><code># ./vmware-install.pl</code></p>
</li>
<li><p>Installer will ask you questions, the defaults should work fine</p>
</li>
<li><p>Reboot</p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>This note shows a brief operation steps about how to install VMware tools on Ubuntu with commands.</p>]]>
    
    </summary>
    
      <category term="Ubuntu" scheme="http://www.tiny1024.com/tags/Ubuntu/"/>
    
      <category term="Linux/UNIX" scheme="http://www.tiny1024.com/categories/Linux-UNIX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[C语言中signed和unsigned导致的溢出]]></title>
    <link href="http://www.tiny1024.com/2015/07/10/c-signed-unsigned/"/>
    <id>http://www.tiny1024.com/2015/07/10/c-signed-unsigned/</id>
    <published>2015-07-10T07:45:20.000Z</published>
    <updated>2015-09-17T07:20:06.000Z</updated>
    <content type="html"><![CDATA[<p>本文分析两个由于signed和unsigned导致的溢出的问题。</p>
<a id="more"></a>
<h2 id="问题1">问题1</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">foo</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> a = <span class="number">6</span>;</span><br><span class="line">  <span class="keyword">int</span> b = -<span class="number">20</span>;</span><br><span class="line">  (a + b &gt; <span class="number">6</span>) ? <span class="built_in">printf</span>(<span class="string">"&gt;6\n"</span>) : <span class="built_in">printf</span>(<span class="string">"&lt;=6\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  foo();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>结果：&gt;6<br>分析：a+b这里做了隐式的转换，把int转化为unsigned int。编译器就会把b当作一个很大的正数。</p>
<h2 id="问题2">问题2</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bar</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">char</span> a[<span class="number">1000</span>];</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">    a[i] = -<span class="number">1</span> - i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, (<span class="keyword">int</span>)<span class="built_in">strlen</span>(a));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  bar();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>结果：255<br>分析：在计算机中数值使用补码来进行表示。signed char类型表示值的范围是[-128, 127]。<br>当i=0时，a[0]=-1，补码为0xFF；<br>当i=1时，a[1]=-2，补码为0xFE；<br>……<br>当i=127时，a[127]=-128，补码为0x80，而-128是char类型所能表示的最小的负数。<br>当i=128时，a[128]=127(-129)，但是这时候发生了溢出，-129需要9位才能保存下来，而char类型数据只有8位，所以最高位被丢弃。剩下的8位是原来9位补码的低8位的值，故补码的值为0x7F，(-129)=(1 1000 0001)原码=(1 0111 1111)补码；<br>……<br>当i=255时，a[255]=0(-256)，补码为0x00，(-256)=(11 0000 0000)原码=(11 0000 0000)补码；<br>当i=256时，a[256]=-1(-257)，补码为0xFF;<br>……<br>按照上面的分析，a[0]到a[254]里面的值都不为0，而a[255]里的值为0。strlen函数是计算字符串长度的，并不包含字符串最后的’\0’。判断一个字符串是否结束的标志就是看是否遇到’\0’；如果遇到，则认为本字符串结束。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>本文分析两个由于signed和unsigned导致的溢出的问题。</p>]]>
    
    </summary>
    
      <category term="C" scheme="http://www.tiny1024.com/tags/C/"/>
    
      <category term="C/C++" scheme="http://www.tiny1024.com/categories/C-C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[C语言中的sizeof]]></title>
    <link href="http://www.tiny1024.com/2015/07/10/c-sizeof/"/>
    <id>http://www.tiny1024.com/2015/07/10/c-sizeof/</id>
    <published>2015-07-10T07:25:57.000Z</published>
    <updated>2015-09-17T06:15:29.000Z</updated>
    <content type="html"><![CDATA[<p>C语言中的<code>sizeof</code>是关键字而不是函数。<code>sizeof</code>一些常用参数的返回值。</p>
<a id="more"></a>
<h2 id="sizeof是关键字而不是函数">sizeof是关键字而不是函数</h2><p>以下四个选项，那几个是正确的：<br><code>int i = 0;</code><br>(A) <code>sizeof(int)</code><br>(B) <code>sizeof(i)</code><br>(C) <code>sizeof int</code><br>(D) <code>sizeof i;</code></p>
<p>答案：在32位系统下(A)，(B)和(D)的值为4，(C)编译器会提示错误，因为int前面可以加unsigned、const等关键字，但是不能加sizeof。</p>
<h2 id="sizeof不同参数的值">sizeof不同参数的值</h2><table>
<thead>
<tr>
<th></th>
<th>32位系统结果</th>
<th>64位系统结果</th>
</tr>
</thead>
<tbody>
<tr>
<td>int *p = NULL;</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td>sizeof(p)</td>
<td>4</td>
<td>8</td>
</tr>
<tr>
<td>sizeof(*p)</td>
<td>4</td>
<td>4</td>
</tr>
<tr>
<td>int a[100];</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td>sizeof(a);</td>
<td>400</td>
<td>400</td>
</tr>
<tr>
<td>sizeof(a[100]);</td>
<td>4</td>
<td>4</td>
</tr>
<tr>
<td>sizeof(&amp;a);</td>
<td>4</td>
<td>8</td>
</tr>
<tr>
<td>sizeof(&amp;a[0]);</td>
<td>4</td>
<td>8</td>
</tr>
<tr>
<td>void fun(int b[100]) { sizeof(b); }</td>
<td>4</td>
<td>8</td>
</tr>
</tbody>
</table>
]]></content>
    <summary type="html">
    <![CDATA[<p>C语言中的<code>sizeof</code>是关键字而不是函数。<code>sizeof</code>一些常用参数的返回值。</p>]]>
    
    </summary>
    
      <category term="C" scheme="http://www.tiny1024.com/tags/C/"/>
    
      <category term="C/C++" scheme="http://www.tiny1024.com/categories/C-C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在Mac上配置Apache和php]]></title>
    <link href="http://www.tiny1024.com/2015/07/09/mac-apache-config/"/>
    <id>http://www.tiny1024.com/2015/07/09/mac-apache-config/</id>
    <published>2015-07-09T06:04:20.000Z</published>
    <updated>2015-09-17T06:08:15.000Z</updated>
    <content type="html"><![CDATA[<p>本文描述了如何在 Mac OS X 系统上启用PHP，并启用每个用户独立的网站。最后创建PHP测试页面，重新启动Apache来查看是否成功。</p>
<a id="more"></a>
<h2 id="启用php">启用php</h2><p>打开Apache2的配置文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/apache2/httpd.conf</span><br></pre></td></tr></table></figure></p>
<p>取消下面一行的注释(去掉前边的#)：<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword"><span class="common">LoadModule</span></span> php5_module libexec/apache2/libphp5.so</span><br></pre></td></tr></table></figure></p>
<h2 id="启用每个用户的支持">启用每个用户的支持</h2><p>这步操作的目的是启用之后就可以使用<a href="http://localhost/~michael/" target="_blank" rel="external">http://localhost/~michael/</a> 来访问每个用户独立的网站。<br>这里边的michael是我登录Mac的用户名。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mkdir ~/Sites/</span><br><span class="line">$ sudo vi /etc/apache2/users/michael.conf</span><br><span class="line"><span class="comment"># 在michael.conf中添加如下的配置：</span></span><br><span class="line">&lt;Directory <span class="string">"/Users/michael/Sites/"</span>&gt;</span><br><span class="line">    Options Indexes MultiViews</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改文件的权限：</span></span><br><span class="line">$ sudo chmod <span class="number">775</span> /etc/apache2/users/michael.conf</span><br><span class="line">$ sudo vi /etc/apache2/httpd.conf</span><br><span class="line"><span class="comment"># 取消以下几行的注释(去掉前边的#)：</span></span><br><span class="line">LoadModule authz_core_module libexec/apache2/mod_authz_core.so</span><br><span class="line">LoadModule authz_host_module libexec/apache2/mod_authz_host.so</span><br><span class="line">LoadModule userdir_module libexec/apache2/mod_userdir.so</span><br><span class="line">Include /private/etc/apache2/extra/httpd-userdir.conf</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/apache2/extra/httpd-userdir.conf</span><br><span class="line"><span class="comment"># 取消以下一行的注释：</span></span><br><span class="line">Include /private/etc/apache2/users/*.conf</span><br></pre></td></tr></table></figure>
<h2 id="创建PHP测试页">创建PHP测试页</h2><p>在~/Sites/下创建test.php，输入以下内容：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="preprocessor">&lt;?php</span></span><br><span class="line">    phpinfo()</span><br><span class="line"><span class="preprocessor">?&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<h2 id="重新启动_Apache">重新启动 Apache</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apachectl restart</span><br></pre></td></tr></table></figure>
<p>打开<a href="http://localhost/~michael/test.php" target="_blank" rel="external">http://localhost/~michael/test.php</a><br>如果看到php相关的版本信息，就说明成功了！</p>
<p>如果没有看到php相关的版本信息，请做以下检查：</p>
<ol>
<li>检查Apache是否已经成功启动(可以查看是否有httpd进程: $ ps aux | grep httpd)</li>
<li>如果没有成功启动，检查配置文件</li>
<li>如果成功启动，检查Apache的端口是否是80</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>本文描述了如何在 Mac OS X 系统上启用PHP，并启用每个用户独立的网站。最后创建PHP测试页面，重新启动Apache来查看是否成功。</p>]]>
    
    </summary>
    
      <category term="Apache" scheme="http://www.tiny1024.com/tags/Apache/"/>
    
      <category term="Mac" scheme="http://www.tiny1024.com/tags/Mac/"/>
    
      <category term="Mac" scheme="http://www.tiny1024.com/categories/Mac/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://www.tiny1024.com/2015/07/09/hello-world/"/>
    <id>http://www.tiny1024.com/2015/07/09/hello-world/</id>
    <published>2015-07-09T02:14:20.000Z</published>
    <updated>2015-09-17T06:09:25.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
</feed>
